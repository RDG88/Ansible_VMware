---
- name: Running task....
  hosts: localhost
  gather_facts: no
  vars:
    username: 'Username'
    password: 'Password'
    domain: 'LAB'
    connectionserver: 'lab-vmcs-01.fqdn.nl'
    desktop_pool: 'W10-IC-DC01'

  tasks:
    - name: Login to Horizon and Get Desktop pool ID
      ansible.builtin.uri:
        url: "https://{{ connectionserver }}/rest/login"
        validate_certs: false
        status_code: 200
        method: POST
        body_format: json
        body:
          username: "{{ username }}"
          password: "{{ password }}"
          domain: "{{ domain }}"
      register: login_response

    - name: Get Desktop pools
      ansible.builtin.uri:
        url: "https://{{ connectionserver }}/rest/inventory/v1/desktop-pools"
        validate_certs: false
        status_code: 200
        method: GET
        headers:
          Content-Type: application/json
          Authorization: "Bearer {{ login_response.json.access_token }}"
      register: desktop_pools_response

    - name: Set desktop pool ID
      set_fact:
        desktop_pool_id: "{{ desktop_pools_response.json | json_query(query) | first }}"
      vars:
        query: "[?name == '{{ desktop_pool }}'].id"
      failed_when: desktop_pool_id is none

    - name: Define filter expression
      set_fact:
        filter_expression: >
          {
            "type": "And",
            "filters": [
              {
                "type": "Equals",
                "name": "desktop_pool_id",
                "value": "{{ desktop_pool_id }}"
              }
            ]
          }
    - name: Debug filter_expression
      debug:
        var: filter_expression

    - name: Get Desktop pool vm details filtert on poolid
      ansible.builtin.uri:
        url: 'https://{{ connectionserver }}/rest/inventory/v1/machines?filter={{ filter_expression | to_json | urlencode }}'
        method: GET
        headers:
          Content-Type: application/json
          Authorization: "Bearer {{ login_response.json.access_token }}"
      register: vmdetails_poolid
    - name: Debug vmdetails_poolid
      debug:
        var: vmdetails_poolid.json

    - name: Wait for all VMs to be AVAILABLE
      ansible.builtin.uri:
        url: 'https://{{ connectionserver }}/rest/inventory/v1/machines?filter={{ filter_expression | to_json | urlencode }}'
        method: GET
        headers:
          Content-Type: application/json
          Authorization: "Bearer {{ login_response.json.access_token }}"
      register: vm_status
      until: vm_status.json | json_query('[] | [?state == `AVAILABLE`].state') | length == (vmdetails_poolid.json | length)
      retries: 10
      delay: 30
      failed_when: "'error' in vm_status.json"


